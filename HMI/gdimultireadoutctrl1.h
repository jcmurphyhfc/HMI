#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CGdimultireadoutctrl1 wrapper class

class CGdimultireadoutctrl1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CGdimultireadoutctrl1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x9F01B6E1, 0x2CA6, 0x470B, { 0x82, 0x70, 0xF1, 0x3E, 0x8C, 0xEC, 0xE6, 0x8F } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DGDIMultiReadout

// Functions
//

	void AboutBox()
	{
		InvokeHelper(DISPID_ABOUTBOX, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
	}
	void SetValue(double Value)
	{
		static BYTE parms[] = VTS_R8 ;
		InvokeHelper(0x1, DISPATCH_METHOD, VT_EMPTY, NULL, parms, Value);
	}
	double GetValue()
	{
		double result;
		InvokeHelper(0x2, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
		return result;
	}
	void SetPaneNum(double PaneNum)
	{
		static BYTE parms[] = VTS_R8 ;
		InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms, PaneNum);
	}
	double GetPaneNum()
	{
		double result;
		InvokeHelper(0x4, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
		return result;
	}
	void SetTotalPanes(short TotalPanes)
	{
		static BYTE parms[] = VTS_I2 ;
		InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms, TotalPanes);
	}
	void UpdateReadouts()
	{
		InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
	}
	short MultiFunc0(short Param)
	{
		short result;
		static BYTE parms[] = VTS_I2 ;
		InvokeHelper(0x7, DISPATCH_METHOD, VT_I2, (void*)&result, parms, Param);
		return result;
	}
	double MultiFunc1(double Param)
	{
		double result;
		static BYTE parms[] = VTS_R8 ;
		InvokeHelper(0x8, DISPATCH_METHOD, VT_R8, (void*)&result, parms, Param);
		return result;
	}

// Properties
//

unsigned long GetTextColor()
{
	unsigned long result;
	GetProperty(0x9, VT_UI4, (void*)&result);
	return result;
}
void SetTextColor(unsigned long propVal)
{
	SetProperty(0x9, VT_UI4, propVal);
}
unsigned long GetTextBackColor()
{
	unsigned long result;
	GetProperty(0xa, VT_UI4, (void*)&result);
	return result;
}
void SetTextBackColor(unsigned long propVal)
{
	SetProperty(0xa, VT_UI4, propVal);
}
short GetTitleFontSize()
{
	short result;
	GetProperty(0xb, VT_I2, (void*)&result);
	return result;
}
void SetTitleFontSize(short propVal)
{
	SetProperty(0xb, VT_I2, propVal);
}
unsigned long GetTitleTextColor()
{
	unsigned long result;
	GetProperty(0xc, VT_UI4, (void*)&result);
	return result;
}
void SetTitleTextColor(unsigned long propVal)
{
	SetProperty(0xc, VT_UI4, propVal);
}
unsigned long GetTitleBackColor()
{
	unsigned long result;
	GetProperty(0xd, VT_UI4, (void*)&result);
	return result;
}
void SetTitleBackColor(unsigned long propVal)
{
	SetProperty(0xd, VT_UI4, propVal);
}
short GetTitleDoGradientFill()
{
	short result;
	GetProperty(0xe, VT_I2, (void*)&result);
	return result;
}
void SetTitleDoGradientFill(short propVal)
{
	SetProperty(0xe, VT_I2, propVal);
}
short GetHasTitle()
{
	short result;
	GetProperty(0xf, VT_I2, (void*)&result);
	return result;
}
void SetHasTitle(short propVal)
{
	SetProperty(0xf, VT_I2, propVal);
}
CString GetTitleText0()
{
	CString result;
	GetProperty(0x10, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText0(CString propVal)
{
	SetProperty(0x10, VT_BSTR, propVal);
}
CString GetTitleText1()
{
	CString result;
	GetProperty(0x11, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText1(CString propVal)
{
	SetProperty(0x11, VT_BSTR, propVal);
}
CString GetTitleText2()
{
	CString result;
	GetProperty(0x12, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText2(CString propVal)
{
	SetProperty(0x12, VT_BSTR, propVal);
}
CString GetTitleText3()
{
	CString result;
	GetProperty(0x13, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText3(CString propVal)
{
	SetProperty(0x13, VT_BSTR, propVal);
}
CString GetTitleText4()
{
	CString result;
	GetProperty(0x14, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText4(CString propVal)
{
	SetProperty(0x14, VT_BSTR, propVal);
}
CString GetTitleText5()
{
	CString result;
	GetProperty(0x15, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText5(CString propVal)
{
	SetProperty(0x15, VT_BSTR, propVal);
}
CString GetTitleText6()
{
	CString result;
	GetProperty(0x16, VT_BSTR, (void*)&result);
	return result;
}
void SetTitleText6(CString propVal)
{
	SetProperty(0x16, VT_BSTR, propVal);
}
double GetdbValue0()
{
	double result;
	GetProperty(0x17, VT_R8, (void*)&result);
	return result;
}
void SetdbValue0(double propVal)
{
	SetProperty(0x17, VT_R8, propVal);
}
double GetdbValue1()
{
	double result;
	GetProperty(0x18, VT_R8, (void*)&result);
	return result;
}
void SetdbValue1(double propVal)
{
	SetProperty(0x18, VT_R8, propVal);
}
double GetdbValue2()
{
	double result;
	GetProperty(0x19, VT_R8, (void*)&result);
	return result;
}
void SetdbValue2(double propVal)
{
	SetProperty(0x19, VT_R8, propVal);
}
double GetdbValue3()
{
	double result;
	GetProperty(0x1a, VT_R8, (void*)&result);
	return result;
}
void SetdbValue3(double propVal)
{
	SetProperty(0x1a, VT_R8, propVal);
}
double GetdbValue4()
{
	double result;
	GetProperty(0x1b, VT_R8, (void*)&result);
	return result;
}
void SetdbValue4(double propVal)
{
	SetProperty(0x1b, VT_R8, propVal);
}
double GetdbValue5()
{
	double result;
	GetProperty(0x1c, VT_R8, (void*)&result);
	return result;
}
void SetdbValue5(double propVal)
{
	SetProperty(0x1c, VT_R8, propVal);
}
short GetTextFontSize0()
{
	short result;
	GetProperty(0x1d, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize0(short propVal)
{
	SetProperty(0x1d, VT_I2, propVal);
}
short GetTextFontSize1()
{
	short result;
	GetProperty(0x1e, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize1(short propVal)
{
	SetProperty(0x1e, VT_I2, propVal);
}
short GetTextFontSize2()
{
	short result;
	GetProperty(0x1f, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize2(short propVal)
{
	SetProperty(0x1f, VT_I2, propVal);
}
short GetTextFontSize3()
{
	short result;
	GetProperty(0x20, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize3(short propVal)
{
	SetProperty(0x20, VT_I2, propVal);
}
short GetTextFontSize4()
{
	short result;
	GetProperty(0x21, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize4(short propVal)
{
	SetProperty(0x21, VT_I2, propVal);
}
short GetTextFontSize5()
{
	short result;
	GetProperty(0x22, VT_I2, (void*)&result);
	return result;
}
void SetTextFontSize5(short propVal)
{
	SetProperty(0x22, VT_I2, propVal);
}
short GetWidth0()
{
	short result;
	GetProperty(0x23, VT_I2, (void*)&result);
	return result;
}
void SetWidth0(short propVal)
{
	SetProperty(0x23, VT_I2, propVal);
}
short GetWidth1()
{
	short result;
	GetProperty(0x24, VT_I2, (void*)&result);
	return result;
}
void SetWidth1(short propVal)
{
	SetProperty(0x24, VT_I2, propVal);
}
short GetWidth2()
{
	short result;
	GetProperty(0x25, VT_I2, (void*)&result);
	return result;
}
void SetWidth2(short propVal)
{
	SetProperty(0x25, VT_I2, propVal);
}
short GetWidth3()
{
	short result;
	GetProperty(0x26, VT_I2, (void*)&result);
	return result;
}
void SetWidth3(short propVal)
{
	SetProperty(0x26, VT_I2, propVal);
}
short GetWidth4()
{
	short result;
	GetProperty(0x27, VT_I2, (void*)&result);
	return result;
}
void SetWidth4(short propVal)
{
	SetProperty(0x27, VT_I2, propVal);
}
short GetWidth5()
{
	short result;
	GetProperty(0x28, VT_I2, (void*)&result);
	return result;
}
void SetWidth5(short propVal)
{
	SetProperty(0x28, VT_I2, propVal);
}
short GetPrecision0()
{
	short result;
	GetProperty(0x29, VT_I2, (void*)&result);
	return result;
}
void SetPrecision0(short propVal)
{
	SetProperty(0x29, VT_I2, propVal);
}
short GetPrecision1()
{
	short result;
	GetProperty(0x2a, VT_I2, (void*)&result);
	return result;
}
void SetPrecision1(short propVal)
{
	SetProperty(0x2a, VT_I2, propVal);
}
short GetPrecision2()
{
	short result;
	GetProperty(0x2b, VT_I2, (void*)&result);
	return result;
}
void SetPrecision2(short propVal)
{
	SetProperty(0x2b, VT_I2, propVal);
}
short GetPrecision3()
{
	short result;
	GetProperty(0x2c, VT_I2, (void*)&result);
	return result;
}
void SetPrecision3(short propVal)
{
	SetProperty(0x2c, VT_I2, propVal);
}
short GetPrecision4()
{
	short result;
	GetProperty(0x2d, VT_I2, (void*)&result);
	return result;
}
void SetPrecision4(short propVal)
{
	SetProperty(0x2d, VT_I2, propVal);
}
short GetPrecision5()
{
	short result;
	GetProperty(0x2e, VT_I2, (void*)&result);
	return result;
}
void SetPrecision5(short propVal)
{
	SetProperty(0x2e, VT_I2, propVal);
}
short GetTitleHeight()
{
	short result;
	GetProperty(0x2f, VT_I2, (void*)&result);
	return result;
}
void SetTitleHeight(short propVal)
{
	SetProperty(0x2f, VT_I2, propVal);
}


};
